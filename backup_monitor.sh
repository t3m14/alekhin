#!/bin/bash
# backup_monitor.sh
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±—ç–∫–∞–ø–æ–≤ Alekhin Clinic

set -e

# ===========================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ===========================================

BACKUP_DIR="/backups"
ALERT_EMAIL="admin@alekhin-clinic.com"
MAX_AGE_HOURS=26  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞ (26 —á–∞—Å–æ–≤ = —É—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É)
MIN_BACKUP_SIZE=1048576  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞ –≤ –±–∞–π—Ç–∞—Ö (1MB)
DISK_USAGE_THRESHOLD=90  # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∏—Å–∫–∞ —Å–≤—ã—à–µ 90%
MIN_FREE_SPACE_GB=5  # –ú–∏–Ω–∏–º—É–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –≤ GB

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
TELEGRAM_BOT_TOKEN=""  # –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TELEGRAM_CHAT_ID=""    # –í—Å—Ç–∞–≤—å—Ç–µ ID —á–∞—Ç–∞

# ===========================================
# –¶–í–ï–¢–ê –î–õ–Ø –í–´–í–û–î–ê
# ===========================================

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# ===========================================
# –§–£–ù–ö–¶–ò–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
# ===========================================

log_info() {
    echo -e "${BLUE}[INFO]${NC} $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

log_success() {
    echo -e "${GREEN}[OK]${NC} $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

log_critical() {
    echo -e "${RED}[CRITICAL]${NC} $(date '+%Y-%m-%d %H:%M:%S') - $1"
}

# ===========================================
# –§–£–ù–ö–¶–ò–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
# ===========================================

send_telegram_alert() {
    local message="$1"
    local priority="$2"  # INFO, WARNING, ERROR, CRITICAL
    
    if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
        local emoji=""
        case "$priority" in
            "INFO") emoji="‚ÑπÔ∏è" ;;
            "WARNING") emoji="‚ö†Ô∏è" ;;
            "ERROR") emoji="‚ùå" ;;
            "CRITICAL") emoji="üö®" ;;
            *) emoji="üìä" ;;
        esac
        
        local formatted_message="${emoji} *${priority}* - Alekhin Clinic Backup Monitor

${message}

üìÖ $(date '+%Y-%m-%d %H:%M:%S')"
        
        curl -s -X POST \
            "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=$formatted_message" \
            -d "parse_mode=Markdown" > /dev/null 2>&1
    fi
}

send_email_alert() {
    local subject="$1"
    local message="$2"
    
    if [ -n "$ALERT_EMAIL" ] && command -v mail >/dev/null 2>&1; then
        echo "$message" | mail -s "[$HOSTNAME] $subject" "$ALERT_EMAIL" 2>/dev/null || true
    fi
}

# ===========================================
# –§–£–ù–ö–¶–ò–ò –ü–†–û–í–ï–†–û–ö
# ===========================================

check_backup_directory() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–æ–≤..."
    
    if [ ! -d "$BACKUP_DIR" ]; then
        log_critical "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $BACKUP_DIR"
        send_telegram_alert "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_DIR" "CRITICAL"
        send_email_alert "–ö–†–ò–¢–ò–ß–ù–û: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $BACKUP_DIR –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $HOSTNAME"
        return 1
    fi
    
    if [ ! -w "$BACKUP_DIR" ]; then
        log_error "–ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–∞–ø–æ–≤: $BACKUP_DIR"
        send_telegram_alert "–ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–∞–ø–æ–≤" "ERROR"
        return 1
    fi
    
    log_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞"
    return 0
}

check_latest_backup() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞..."
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    local latest_backup=$(find "$BACKUP_DIR" -name "*backup_*.sql.gz" -type f -printf '%T@ %p\n' 2>/dev/null | sort -nr | head -1)
    
    if [ -z "$latest_backup" ]; then
        log_critical "–ë—ç–∫–∞–ø—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
        send_telegram_alert "–ë—ç–∫–∞–ø—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $BACKUP_DIR" "CRITICAL"
        send_email_alert "–ö–†–ò–¢–ò–ß–ù–û: –ë—ç–∫–∞–ø—ã –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" "–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $BACKUP_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        return 1
    fi
    
    local backup_timestamp=$(echo "$latest_backup" | cut -d' ' -f1)
    local backup_file=$(echo "$latest_backup" | cut -d' ' -f2-)
    local backup_name=$(basename "$backup_file")
    
    local current_time=$(date +%s)
    local backup_age_seconds=$((current_time - ${backup_timestamp%.*}))
    local backup_age_hours=$((backup_age_seconds / 3600))
    local backup_age_minutes=$(((backup_age_seconds % 3600) / 60))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    local backup_size=$(stat -f%z "$backup_file" 2>/dev/null || stat -c%s "$backup_file" 2>/dev/null || echo "0")
    local backup_size_hr=$(du -h "$backup_file" 2>/dev/null | cut -f1 || echo "0B")
    
    log_info "–ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø: $backup_name"
    log_info "–í–æ–∑—Ä–∞—Å—Ç: ${backup_age_hours}—á ${backup_age_minutes}–º"
    log_info "–†–∞–∑–º–µ—Ä: $backup_size_hr"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç
    if [ "$backup_age_hours" -gt "$MAX_AGE_HOURS" ]; then
        log_error "–ë—ç–∫–∞–ø —É—Å—Ç–∞—Ä–µ–ª! –í–æ–∑—Ä–∞—Å—Ç: ${backup_age_hours}—á (–º–∞–∫—Å–∏–º—É–º: ${MAX_AGE_HOURS}—á)"
        send_telegram_alert "–£—Å—Ç–∞—Ä–µ–≤—à–∏–π –±—ç–∫–∞–ø!
        
–§–∞–π–ª: $backup_name
–í–æ–∑—Ä–∞—Å—Ç: ${backup_age_hours}—á ${backup_age_minutes}–º
–ú–∞–∫—Å–∏–º—É–º: ${MAX_AGE_HOURS}—á" "ERROR"
        send_email_alert "–û–®–ò–ë–ö–ê: –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –±—ç–∫–∞–ø" "–ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø –±—ã–ª —Å–æ–∑–¥–∞–Ω $backup_age_hours —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç: $MAX_AGE_HOURS —á–∞—Å–æ–≤."
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
    if [ "$backup_size" -lt "$MIN_BACKUP_SIZE" ]; then
        log_error "–ë—ç–∫–∞–ø —Å–ª–∏—à–∫–æ–º –º–∞–ª! –†–∞–∑–º–µ—Ä: $backup_size_hr (–º–∏–Ω–∏–º—É–º: $((MIN_BACKUP_SIZE / 1024 / 1024))MB)"
        send_telegram_alert "–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª–µ–Ω—å–∫–∏–π –±—ç–∫–∞–ø!
        
–§–∞–π–ª: $backup_name
–†–∞–∑–º–µ—Ä: $backup_size_hr
–í–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞" "ERROR"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å
    if ! gzip -t "$backup_file" 2>/dev/null; then
        log_error "–ë—ç–∫–∞–ø –ø–æ–≤—Ä–µ–∂–¥–µ–Ω! –§–∞–π–ª: $backup_name"
        send_telegram_alert "–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –±—ç–∫–∞–ø!
        
–§–∞–π–ª: $backup_name
–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º gzip –∞—Ä—Ö–∏–≤–æ–º" "CRITICAL"
        return 1
    fi
    
    log_success "–ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø –∞–∫—Ç—É–∞–ª–µ–Ω –∏ –≤–∞–ª–∏–¥–µ–Ω"
    return 0
}

check_disk_space() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ..."
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Å–∫–µ
    local disk_info=$(df "$BACKUP_DIR" | tail -1)
    local disk_usage_percent=$(echo "$disk_info" | awk '{print $5}' | sed 's/%//')
    local available_space_kb=$(echo "$disk_info" | awk '{print $4}')
    local available_space_gb=$((available_space_kb / 1024 / 1024))
    
    log_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${disk_usage_percent}%"
    log_info "–°–≤–æ–±–æ–¥–Ω–æ: ${available_space_gb}GB"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    if [ "$disk_usage_percent" -gt "$DISK_USAGE_THRESHOLD" ]; then
        log_warning "–î–∏—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${disk_usage_percent}% (–ø–æ—Ä–æ–≥: ${DISK_USAGE_THRESHOLD}%)"
        send_telegram_alert "–ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ!
        
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${disk_usage_percent}%
–°–≤–æ–±–æ–¥–Ω–æ: ${available_space_gb}GB
–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $BACKUP_DIR" "WARNING"
        send_email_alert "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ" "–î–∏—Å–∫ —Å –±—ç–∫–∞–ø–∞–º–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ $disk_usage_percent%. –°–≤–æ–±–æ–¥–Ω–æ: ${available_space_gb}GB"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
    if [ "$available_space_gb" -lt "$MIN_FREE_SPACE_GB" ]; then
        log_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${available_space_gb}GB (–º–∏–Ω–∏–º—É–º: ${MIN_FREE_SPACE_GB}GB)"
        send_telegram_alert "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –º–µ—Å—Ç–∞!
        
–°–≤–æ–±–æ–¥–Ω–æ: ${available_space_gb}GB
–ú–∏–Ω–∏–º—É–º: ${MIN_FREE_SPACE_GB}GB
–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤!" "ERROR"
        return 1
    fi
    
    log_success "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    return 0
}

check_backup_consistency() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –±—ç–∫–∞–ø–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±—ç–∫–∞–ø—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    local recent_backups=$(find "$BACKUP_DIR" -name "*backup_*.sql.gz" -type f -mtime -7 | wc -l)
    
    if [ "$recent_backups" -eq 0 ]; then
        log_error "–ù–µ—Ç –±—ç–∫–∞–ø–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π!"
        send_telegram_alert "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–≤–µ–∂–∏–µ –±—ç–∫–∞–ø—ã!
        
–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π" "ERROR"
        return 1
    fi
    
    log_info "–ù–∞–π–¥–µ–Ω–æ $recent_backups –±—ç–∫–∞–ø–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–æ–≤
    local yesterday=$(date -d "yesterday" +%Y%m%d)
    local yesterday_backup=$(find "$BACKUP_DIR" -name "*backup_${yesterday}_*.sql.gz" -type f)
    
    if [ -z "$yesterday_backup" ]; then
        log_warning "–ù–µ –Ω–∞–π–¥–µ–Ω –≤—á–µ—Ä–∞—à–Ω–∏–π –±—ç–∫–∞–ø (–≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ)"
    else
        log_success "–í—á–µ—Ä–∞—à–Ω–∏–π –±—ç–∫–∞–ø –Ω–∞–π–¥–µ–Ω: $(basename "$yesterday_backup")"
    fi
    
    return 0
}

check_docker_containers() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if ! command -v docker >/dev/null 2>&1; then
        log_warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    local containers=("backend" "db")
    local all_running=true
    
    for container in "${containers[@]}"; do
        if docker ps --format "table {{.Names}}" | grep -q "^${container}$"; then
            log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container –∑–∞–ø—É—â–µ–Ω"
        else
            log_warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            all_running=false
        fi
    done
    
    if [ "$all_running" = false ]; then
        send_telegram_alert "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã!
        
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ Docker" "WARNING"
    fi
    
    return 0
}

generate_report() {
    local start_time="$1"
    local end_time="$2"
    local checks_passed="$3"
    local total_checks="$4"
    
    local duration=$((end_time - start_time))
    local status="‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´"
    local status_emoji="‚úÖ"
    
    if [ "$checks_passed" -ne "$total_checks" ]; then
        status="‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´"
        status_emoji="‚ö†Ô∏è"
    fi
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—ç–∫–∞–ø–æ–≤
    local total_backups=$(find "$BACKUP_DIR" -name "*.sql.gz" -type f 2>/dev/null | wc -l)
    local total_size=$(du -sh "$BACKUP_DIR" 2>/dev/null | cut -f1 || echo "N/A")
    local latest_backup=$(find "$BACKUP_DIR" -name "*backup_*.sql.gz" -type f -printf '%T@ %p\n' 2>/dev/null | sort -nr | head -1 | cut -d' ' -f2-)
    local latest_backup_name=$(basename "$latest_backup" 2>/dev/null || echo "N/A")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    local hostname=$(hostname)
    local uptime=$(uptime | awk -F'up ' '{print $2}' | awk -F',' '{print $1}')
    local load_avg=$(uptime | awk -F'load average:' '{print $2}')
    
    local report="${status_emoji} *–û—Ç—á–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±—ç–∫–∞–ø–æ–≤*
üè• *Alekhin Clinic*

üìä *–°—Ç–∞—Ç—É—Å:* $status
üïê *–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏:* $(date '+%Y-%m-%d %H:%M:%S')
‚è± *–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:* ${duration}—Å
‚úÖ *–ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫:* ${checks_passed}/${total_checks}

üì¶ *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—ç–∫–∞–ø–æ–≤:*
‚Ä¢ –í—Å–µ–≥–æ –±—ç–∫–∞–ø–æ–≤: $total_backups
‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $total_size
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π: $latest_backup_name

üñ• *–°–∏—Å—Ç–µ–º–∞:*
‚Ä¢ –°–µ—Ä–≤–µ—Ä: $hostname
‚Ä¢ Uptime: $uptime
‚Ä¢ Load Average:$load_avg

üìÅ *–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:* $BACKUP_DIR"

    echo "$report"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏–ª–∏ —Ä–∞–∑ –≤ –¥–µ–Ω—å
    local current_hour=$(date +%H)
    if [ "$checks_passed" -ne "$total_checks" ] || [ "$current_hour" = "08" ]; then
        if [ "$checks_passed" -ne "$total_checks" ]; then
            send_telegram_alert "$report" "WARNING"
            send_email_alert "–ü—Ä–æ–±–ª–µ–º—ã —Å –±—ç–∫–∞–ø–∞–º–∏ Alekhin Clinic" "$report"
        else
            send_telegram_alert "$report" "INFO"
        fi
    fi
}

# ===========================================
# –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# ===========================================

main() {
    local start_time=$(date +%s)
    local checks_passed=0
    local total_checks=5
    
    echo -e "${PURPLE}========================================${NC}"
    echo -e "${PURPLE}  üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –ë–≠–ö–ê–ü–û–í ALEKHIN CLINIC  ${NC}"
    echo -e "${PURPLE}========================================${NC}"
    log_info "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞ $(hostname)"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏
    if check_backup_directory; then
        ((checks_passed++))
    fi
    
    if check_latest_backup; then
        ((checks_passed++))
    fi
    
    if check_disk_space; then
        ((checks_passed++))
    fi
    
    if check_backup_consistency; then
        ((checks_passed++))
    fi
    
    if check_docker_containers; then
        ((checks_passed++))
    fi
    
    local end_time=$(date +%s)
    
    echo ""
    echo -e "${PURPLE}========================================${NC}"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    generate_report "$start_time" "$end_time" "$checks_passed" "$total_checks"
    
    if [ "$checks_passed" -eq "$total_checks" ]; then
        log_success "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
        exit 0
    else
        log_error "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: $((total_checks - checks_passed))"
        exit 1
    fi
}

# ===========================================
# –û–ë–†–ê–ë–û–¢–ö–ê –ê–†–ì–£–ú–ï–ù–¢–û–í
# ===========================================

case "${1:-}" in
    --quiet)
        # –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º - —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏
        main 2>/dev/null | grep -E "(ERROR|CRITICAL|WARNING)" || true
        ;;
    --json)
        # JSON –≤—ã–≤–æ–¥ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
        echo '{"timestamp":"'$(date -Iseconds)'","status":"checking","checks":[]}'
        main > /dev/null 2>&1
        echo '{"timestamp":"'$(date -Iseconds)'","status":"completed","exit_code":'$?'}'
        ;;
    --help)
        echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—ç–∫–∞–ø–æ–≤ Alekhin Clinic"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏—è]"
        echo ""
        echo "–û–ø—Ü–∏–∏:"
        echo "  (–±–µ–∑ –æ–ø—Ü–∏–π)  –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –≤—ã–≤–æ–¥–æ–º"
        echo "  --quiet      –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º (—Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏)"
        echo "  --json       JSON –≤—ã–≤–æ–¥ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"
        echo "  --help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo "–ö–æ–¥—ã –≤–æ–∑–≤—Ä–∞—Ç–∞:"
        echo "  0  –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
        echo "  1  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã"
        ;;
    *)
        main
        ;;
esac