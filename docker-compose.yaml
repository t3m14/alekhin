version: '3.8'
services:
  backend:
    image: backend:latest
    container_name: backend
    restart: always
    build:
      context: ./alekhin
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./media:/app/media
      - ./config:/app/config
      - ./alekhin:/app
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:S3cUr3P@ssw0rd_2025!@db:5432/postgres

  admin:
    image: admin:latest
    container_name: admin
    restart: always
    build:
      context: ./alekhin-clinic_admin_frontend/
      dockerfile: Dockerfile
    ports:
      - "3001:3000"

  frontend:
    image: frontend:latest
    container_name: frontend
    restart: always
    build:
      context: ./alekhin-clinic_frontend
      dockerfile: Dockerfile
    ports:
      - "3002:3000"

  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: S3cUr3P@ssw0rd_2025!
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # pgAdmin на порту 5050
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: S3cUr3PgAdm1n_2025!
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./backups:/var/lib/pgadmin/storage/backups
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin_data: