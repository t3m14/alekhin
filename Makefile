# Makefile –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Alekhin

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[0;32m
YELLOW := \033[1;33m
BLUE := \033[0;34m
RED := \033[0;31m
NC := \033[0m

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
.PHONY: help setup start stop restart logs clean build migrate test

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-20s$(NC) %s\n", $$1, $$2}'

setup: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª–∏, —Å–æ–∑–¥–∞—Ç—å .env)
	@echo "$(BLUE)üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	@chmod +x setup.sh
	@./setup.sh

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@echo "$(YELLOW)‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...$(NC)"
	@git pull origin main
	@echo "$(YELLOW)‚è≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose down
	@docker-compose up --build -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"
	@make status

start-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å PgAdmin)
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@docker-compose --profile dev up -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —Å PgAdmin$(NC)"
	@make status

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose down
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose restart
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã$(NC)"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@docker-compose logs -f

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend
	@docker-compose logs -f backend

logs-db: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@docker-compose logs -f db

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose ps
	@echo ""
	@echo "$(BLUE)üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:$(NC)"
	@echo "  Backend:    http://localhost:8000"
	@echo "  Frontend:   http://localhost:3002"
	@echo "  Admin:      http://localhost:3001"
	@echo "  PgAdmin:    http://localhost:5050 (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)"

build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
	@echo "$(BLUE)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@docker-compose build --no-cache
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ Django
	@echo "$(BLUE)üóÑÔ∏è  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@docker-compose exec backend python manage.py migrate
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

makemigrations: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ Django
	@echo "$(BLUE)üìù –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@docker-compose exec backend python manage.py makemigrations
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã$(NC)"

createsuperuser: ## –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Django
	@echo "$(BLUE)üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...$(NC)"
	@docker-compose exec backend python manage.py createsuperuser

shell: ## –û—Ç–∫—Ä—ã—Ç—å shell Django
	@docker-compose exec backend python manage.py shell

dbshell: ## –û—Ç–∫—Ä—ã—Ç—å shell PostgreSQL
	@docker-compose exec db psql -U postgres -d postgres

backup-db: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(BLUE)üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@mkdir -p data/backups
	@docker-compose exec db pg_dump -U postgres -d postgres > data/backups/backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "$(GREEN)‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ data/backups/$(NC)"

restore-db: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make restore-db BACKUP=filename.sql)
	@echo "$(BLUE)üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@if [ -z "$(BACKUP)" ]; then \
		echo "$(RED)‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞: make restore-db BACKUP=filename.sql$(NC)"; \
		exit 1; \
	fi
	@docker-compose exec -T db psql -U postgres -d postgres < data/backups/$(BACKUP)
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã, volumes)
	@echo "$(RED)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤...$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ! (y/N): " confirm && [ "$confirm" = "y" ]
	@docker-compose down -v --remove-orphans
	@docker system prune -af --volumes
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

clean-soft: ## –ú—è–≥–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã)
	@echo "$(YELLOW)üßπ –ú—è–≥–∫–∞—è –æ—á–∏—Å—Ç–∫–∞...$(NC)"
	@docker-compose down --remove-orphans
	@docker container prune -f
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—á–∏—â–µ–Ω—ã$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã Django
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@docker-compose exec backend python manage.py test
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"

install-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@docker-compose exec backend pip install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

collectstatic: ## –°–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
	@echo "$(BLUE)üìÇ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	@docker-compose exec backend python manage.py collectstatic --noinput
	@echo "$(GREEN)‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Å–æ–±—Ä–∞–Ω—ã$(NC)"

check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
	@echo "$(BLUE)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django...$(NC)"
	@docker-compose exec backend python manage.py check

generate-password: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å
	@echo "$(BLUE)üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è:$(NC)"
	@python3 -c "import secrets, string; print(''.join(secrets.choice(string.ascii_letters + string.digits + '!@#$%^&*') for _ in range(16)))"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-setup: setup start-dev migrate createsuperuser ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

quick-restart: ## –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend
	@echo "$(YELLOW)‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend...$(NC)"
	@docker-compose restart backend
	@echo "$(GREEN)‚úÖ Backend –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω$(NC)"

watch-logs: ## –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	@docker-compose logs -f --tail=100

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è production
prod-start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	@docker-compose -f docker-compose.prod.yml up -d
	@echo "$(GREEN)‚úÖ Production —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

prod-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å production —Å–µ—Ä–≤–∏—Å—ã
	@docker-compose -f docker-compose.prod.yml down

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
env-info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(NC)"
	@if [ -f ".env" ]; then \
		echo "$(GREEN)‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω$(NC)"; \
		echo "–û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"; \
		grep -E "^(POSTGRES_|DJANGO_|REDIS_|JWT_)" .env | sed 's/=.*/=***/' || true; \
	else \
		echo "$(RED)‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: make setup"; \
	fi

docker-info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Docker
	@echo "$(BLUE)üê≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Docker:$(NC)"
	@docker --version
	@docker-compose --version
	@echo ""
	@echo "$(BLUE)üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:$(NC)"
	@docker system df

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
	@echo "$(BLUE)üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤:$(NC)"
	@docker stats --no-stream

ports: ## –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã
	@echo "$(BLUE)üîå –ó–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã:$(NC)"
	@netstat -tlnp 2>/dev/null | grep -E ":(8000|3001|3002|5432|5050|6379)" || echo "–ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
update: ## –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
	@echo "$(BLUE)üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@docker-compose pull
	@docker-compose build --pull
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

volumes-info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ volumes
	@echo "$(BLUE)üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ volumes:$(NC)"
	@docker volume ls | grep -E "(postgres_data|redis_data|pgadmin_data)"
	@echo ""
	@docker system df -v | grep -A 20 "Local Volumes"